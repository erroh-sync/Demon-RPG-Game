<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>InputHorizontalAxis = 0;
InputHorizontalAxisDown = 0;
InputHorizontalAxisRelease = 0;

InputVerticalAxis = 0;
InputVerticalAxisDown = 0;
InputVerticalAxisRelease = 0;

InputShoulderAxis = 0;
InputShoulderAxisDown = 0;
InputShoulderAxisRelease = 0;

InputSelectAxis = 0;
InputSelectAxisDown = 0;
InputSelectAxisRelease = 0;

gp_axislh_last = 0;
gp_axislv_last = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var last;

var haxisMulti = 1;
if(gp_axislh_last == round(gamepad_axis_value(0, gp_axislh)))
    haxisMulti = 0;
    
last = InputHorizontalAxis;
InputHorizontalAxis = sign((keyboard_check(vk_left) - keyboard_check(vk_right)) + (gamepad_button_check(0, gp_padl) - gamepad_button_check(0, gp_padr) + round(-gamepad_axis_value(0, gp_axislh))));
InputHorizontalAxisDown = sign((keyboard_check_pressed(vk_left) - keyboard_check_pressed(vk_right)) + (gamepad_button_check_pressed(0, gp_padl) - gamepad_button_check_pressed(0, gp_padr) + (round(-gamepad_axis_value(0, gp_axislh)) * haxisMulti)));
InputHorizontalAxisRelease = 0;
if(last != InputHorizontalAxis &amp;&amp; last != 0)
    InputHorizontalAxisRelease = last;

var vaxisMulti = 1;
if(gp_axislv_last == round(gamepad_axis_value(0, gp_axislv)))
    vaxisMulti = 0;   
  
last = InputVerticalAxis;  
InputVerticalAxis = -sign((keyboard_check(vk_down) - keyboard_check(vk_up)) + (gamepad_button_check(0, gp_padd) - gamepad_button_check(0, gp_padu) + round(gamepad_axis_value(0, gp_axislv))));
InputVerticalAxisDown = -sign((keyboard_check_pressed(vk_down) - keyboard_check_pressed(vk_up)) + (gamepad_button_check_pressed(0, gp_padd) - gamepad_button_check_pressed(0, gp_padu) + (round(gamepad_axis_value(0, gp_axislv)) * vaxisMulti)));
InputVerticalAxisRelease = 0;
if(last != InputVerticalAxis &amp;&amp; last != 0)
    InputVerticalAxisRelease = last;
    
InputShoulderAxis = sign((keyboard_check(ord("A")) - keyboard_check(ord("S"))) + (gamepad_button_check(0, gp_shoulderl) - gamepad_button_check(0, gp_shoulderr)));
InputShoulderAxisDown = sign((keyboard_check_pressed(ord("A")) - keyboard_check_pressed(ord("S"))) + (gamepad_button_check_pressed(0, gp_shoulderl) - gamepad_button_check_pressed(0, gp_shoulderr)));
InputShoulderAxisRelease = sign((keyboard_check_released(ord("A")) - keyboard_check_released(ord("S"))) + (gamepad_button_check_released(0, gp_shoulderl) - gamepad_button_check_released(0, gp_shoulderr)));

InputSelectAxis = sign((keyboard_check(ord("Z")) - keyboard_check(ord("X"))) + (gamepad_button_check(0, gp_face1) - gamepad_button_check(0, gp_face2)));
InputSelectAxisDown = sign((keyboard_check_pressed(ord("Z")) - keyboard_check_pressed(ord("X"))) + (gamepad_button_check_pressed(0, gp_face1) - gamepad_button_check_pressed(0, gp_face2)));
InputSelectAxisRelease = sign((keyboard_check_released(ord("Z")) - keyboard_check_released(ord("X"))) + (gamepad_button_check_released(0, gp_face1) - gamepad_button_check_released(0, gp_face2)));

gp_axislh_last = round(gamepad_axis_value(0, gp_axislh));
gp_axislv_last = round(gamepad_axis_value(0, gp_axislv));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
