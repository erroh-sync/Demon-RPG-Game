<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Obj_UIMaster</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

xPosition = 0;
yPosition = 0;
xMax = 5;
yMax = 5;

MenuState = 0;

BeginFastScrollTime = 20;
FastScrollIntervalTime = 4;
FastScrollTimer = BeginFastScrollTime;

b_horizontalsounds = true;
b_verticalsounds = true;
b_selectsounds = true;
b_backsounds = true;
HoverSound = Snd_Debug_MenuHover;
SelectSound = Snd_Debug_MenuSelect;
BackSound = Snd_Debug_MenuBack;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Reset the Fast Scroll Timer if we release any of the directional buttons
if(Obj_InputManager.InputHorizontalAxisRelease != 0 || Obj_InputManager.InputVerticalAxisRelease != 0)
{
    FastScrollTimer = BeginFastScrollTime;
}

// Decrement the Fast Scroll Timer if we're holding either of the directional buttons
if((Obj_InputManager.InputHorizontalAxis != 0 || Obj_InputManager.InputVerticalAxis != 0) &amp;&amp; FastScrollTimer &gt; 0)
{
    FastScrollTimer -= 1;
}

// Movement
if(Obj_InputManager.InputVerticalAxisDown != 0 || (Obj_InputManager.InputVerticalAxis != 0 &amp;&amp; FastScrollTimer == 0))
{
    if(b_verticalsounds)
        __play_sfx(Snd_Debug_MenuHover, 1.0);

    yPosition -= Obj_InputManager.InputVerticalAxis;
    
    if(yPosition &gt; yMax)
    {
        yPosition = 0;
    }
    else if(yPosition &lt; 0)
    {
        yPosition = yMax;
    }
    
    if(FastScrollTimer == 0)
        FastScrollTimer = FastScrollIntervalTime;
}
else if(Obj_InputManager.InputHorizontalAxisDown != 0 || (Obj_InputManager.InputHorizontalAxis != 0 &amp;&amp; FastScrollTimer == 0))
{   
    if(b_horizontalsounds)
        __play_sfx(Snd_Debug_MenuHover, 1.0);
        
    xPosition -= Obj_InputManager.InputHorizontalAxis;
    
    if(xPosition &gt; xMax)
    {
        xPosition = 0;
    }
    else if(xPosition &lt; 0)
    {
        xPosition = xMax;
    }
    
    if(FastScrollTimer == 0)
        FastScrollTimer = FastScrollIntervalTime;
}
if(Obj_InputManager.InputSelectAxisDown &gt; 0 &amp;&amp; b_selectsounds)
{
    __play_sfx(SelectSound, 1.0);
}else if(Obj_InputManager.InputSelectAxisDown &lt; 0 &amp;&amp; b_backsounds)
{
    __play_sfx(BackSound, 1.0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(bEnableDraw){
    // Debug draw code. Will be overwritten in any used menus.
    var i;
    var j;
    
    for(i= 0; i &lt;= xMax; i += 1)
    {
        for(j= 0; j &lt;= yMax; j += 1)
        {
            if(xPosition ==  i  &amp;&amp; yPosition = j){
                draw_text(i * 25, j * 25, "YES");
            }else{
                draw_text(i * 25, j * 25, "NO");
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
