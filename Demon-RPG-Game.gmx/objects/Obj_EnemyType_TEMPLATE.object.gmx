<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Obj_EnemyData</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// STATS 
Hitpoints = 10;
MaxHitpoints = 10;
Strength = 10;
Endurance = 10;
Agility = 10;
Luck = 10;

// SKILLS
SkillArray[0] = 0;
SkillArray[1] = 0;
SkillArray[2] = 1;
LastSkillIndex = 2;

// DIALOUGE DATA
NameStr = "NAMESTR";

StartDialougeString[0] = "Hello! You wish to speak with me?"

QuestionIndex[0, 0] = "Is the sky Blue?"; // Question name
QuestionIndex[0, 1] = "Yes"; // Best Answer
QuestionIndex[0, 2] = "Yes! The sky IS blue!"; // Best Response
QuestionIndex[0, 3] = "Sometimes"; // Neutral Answer
QuestionIndex[0, 4] = "Huh, I guess at dusk it is orange."; // Neutral Response
QuestionIndex[0, 5] = "No"; // Incorrect Answer
QuestionIndex[0, 6] = "Hah, Maybe in Morioh lmao"; // Incorrect Response

DialougeFailedString = "Hmph, What a waste of time!"
DialougeSuccededString = "Yes! Take this skill!"

RejectCommunication = false;

TutorSkillIndex = 0;

// GENERAL ANIMATION
AnimTimer = random(100);

AnimationSpeed = 0.12;

// IDLE BREAK ANIMATION
IdleBreakMaxTimer = 180;
IdleBreakTimer = random(IdleBreakMaxTimer);
IdleBreakFrame = 0;
IdleBreakFrameRate = 0.25;

// BLINK ANIMATION
BlinkMaxTimer = 200;
BlinkTimer = random(BlinkMaxTimer);
BlinkFrame = 0;
BlinkFrameRate = 0.25;

// MISCELANEOUS
AimOffset = 20;

DrawSize = 64;
DrawResolution = 256;
surface_free(TextureSurface);
TextureSurface = surface_create(DrawResolution,DrawResolution);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// GENERAL ANIMATION
AnimTimer += AnimationSpeed*AnimPlaySpeed;

// IDLE BREAK ANIMATION
IdleBreakTimer -= 1;
if(IdleBreakTimer &lt; 0)
{
    IdleBreakFrame += IdleBreakFrameRate*AnimPlaySpeed;
    if(IdleBreakFrame &gt;= 5)
    {
        IdleBreakFrame = 0;
        IdleBreakTimer = IdleBreakMaxTimer;  
    }
}

// BLINK ANIMATION
BlinkTimer -= 1;
if(BlinkTimer &lt; 0)
{
    BlinkFrame += BlinkFrameRate*AnimPlaySpeed;
    if(BlinkFrame &gt;= 4)
    {
        BlinkFrame = 0;
        BlinkTimer = BlinkMaxTimer;  
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(bEnableDraw)
{
    // DRAW TO SURFACE
    if(surface_exists(TextureSurface))
    {
        surface_set_target(TextureSurface);

        draw_clear_alpha(c_black, 0.0);
        d3d_set_projection_ortho(0,0,DrawResolution,DrawResolution,0);
        
        draw_set_alpha(1);
        draw_set_color(c_white);
        
        /*
            DRAW CODE FOR ---- ENEMY
        */
        if((FlickerTimer) % 2  == 0){        
            if(FlickerTimer &gt; 0 || (Hitpoints &lt;= 0 &amp;&amp; Hitpoints &gt; -9999))
            {
                // DRAW HURT SPRITE
            }
            else
            {
                // DRAW STUFF HERE
            }
        }    
        
        surface_reset_target();
        Scr_Reset3dView();
    }else{
        TextureSurface = surface_create(DrawResolution,DrawResolution);
    }
    
    event_inherited();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
