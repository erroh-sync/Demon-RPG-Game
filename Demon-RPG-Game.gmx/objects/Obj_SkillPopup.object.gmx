<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Obj_UIMaster</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

FadeTime = 10;
FadeInTimer = FadeTime;
FadeOutTimer = FadeTime;
WaitTimer = 30; 

Alpha = 0;
FadeAmount = 1 / FadeTime;

SkillIndex = 0;

OverrideString = "NO_OVERRIDE";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(FadeInTimer &gt; 0)
{
    FadeInTimer -= 1;
    Alpha += FadeAmount;
}
else if(WaitTimer &gt; 0)
{
    WaitTimer -= 1;
}
else if(FadeOutTimer &gt; 0)
{
    FadeOutTimer -= 1;
    Alpha -= FadeAmount;
}
else
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(bEnableDraw)
{
    var String = Obj_SkillItemData.SkillData[SkillIndex, 0];
    if(OverrideString != "NO_OVERRIDE")
        String = OverrideString;
    var StringWidth = (string_length(String) - 1.5) * (15 * 0.8);
    
    draw_set_color(make_colour_rgb( 031, 027, 027));
    draw_set_alpha(Alpha);
    draw_rectangle(320 - StringWidth/2 - 32, 258, 320 + StringWidth/2 + 32, 301, false);
    draw_set_color(c_white);
    
    draw_sprite_ext(GUI_Combat_Misc_SkillPopup, 0, 320 - StringWidth/2 - 32 - 26, 280, 1.0, 1.0, 0.0, c_white, Alpha);
    draw_sprite_ext(GUI_Combat_Misc_SkillPopup, 1, 320 + StringWidth/2 + 32 + 26, 280, 1.0, 1.0, 0.0, c_white, Alpha);

    var a = string(clamp(floor(Alpha * 255), 0, 255));
    show_debug_message(a);
    Scr_DrawText("#a" + a + String, 320 - StringWidth, 271, 0.8, GUI_Font_OldStyleKana);
    draw_set_alpha(1.0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
